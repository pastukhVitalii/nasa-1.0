{"version":3,"sources":["api/api.tsx","redux/photos-reducer.ts","components/Card/Card.tsx","components/Input/Input.tsx","components/Button/Button.tsx","components/Select/Select.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","optional","nasaApi","page","sol","rover","camera","get","initialState","photos","error","handleError","dispatch","type","setAppErrorAC","MyCard","React","memo","props","className","wide","square","imageUrl","photo","img_src","name","full_name","MyInput","isValid","isNaN","value","onChange","useCallback","e","onSetSol","currentTarget","label","helperText","MyButton","onClick","onSetPage","raised","disabled","MySelect","onEnhancedChange","index","item","onSetValue","getAttribute","enhanced","options","map","option","App","useSelector","state","useState","setPage","setSol","setRover","setCamera","useDispatch","useEffect","console","log","then","res","data","catch","setPhotosTC","incrementPage","decrementPage","length","p","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e14353d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.nasa.gov/mars-photos/api/v1/rovers/',\r\n})\r\n\r\n// api\r\nconst api = '6lVBFlRMabvO0pPAu5181CYLLD9YjArxVYcXckUd';\r\nlet optional = '';\r\n\r\nexport const nasaApi = {\r\n  getPhotos(page: number, sol: string, rover: string, camera: string) {\r\n    if (camera !== 'none') {\r\n      optional = `&camera=${camera}`\r\n    } else optional = ''\r\n    return instance.get<ResponseType>(`${rover}/photos?sol=${sol}&page=${page}${optional}&api_key=${api}`);\r\n  },\r\n}\r\n\r\n// types\r\nexport type ResponseType = {\r\n  photos: Array<PhotoType>\r\n}\r\n\r\nexport type ResEpisodesType = {\r\n  photos: Array<PhotoType>\r\n}\r\n\r\nexport type PhotoType = {\r\n  id: string\r\n  sol: string\r\n  camera: {\r\n    id: string,\r\n    name: string,\r\n    rover_id: string,\r\n    full_name: string\r\n  },\r\n  img_src: string,\r\n  earth_date: string,\r\n  rover: {\r\n    id: string,\r\n    name: string,\r\n    landing_date: string,\r\n    launch_date: string,\r\n    status: string\r\n  }\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {nasaApi, PhotoType, ResEpisodesType} from '../api/api'\r\n\r\nexport type ErrorType = {\r\n  error: string | null\r\n}\r\nconst initialState: ResEpisodesType | ErrorType = {\r\n  photos: [],\r\n  error: null,\r\n}\r\n\r\nexport const photosReducer = (state: ResEpisodesType | ErrorType = initialState, action: ActionsType): ResEpisodesType | ErrorType => {\r\n  switch (action.type) {\r\n    case 'APP/SET-PHOTOS':\r\n      return {\r\n        ...state,\r\n        photos: action.photos\r\n      }\r\n    case \"APP/SET-ERROR\":\r\n      return {\r\n        ...state, error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// actions\r\n\r\nexport const setPhotosAC = (photos: Array<PhotoType>) => ({type: 'APP/SET-PHOTOS', photos} as const);\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\n\r\n// thunks\r\nexport const setPhotosTC = (page: number, sol: string, rover: string, camera: string) => {\r\n  return (dispatch: ThunkDispatch) => {\r\n    nasaApi.getPhotos(page, sol, rover, camera)\r\n      .then((res) => {\r\n        dispatch(setPhotosAC(res.data.photos))\r\n      })\r\n      .catch(error => {\r\n        handleError(error, dispatch);\r\n      })\r\n  }\r\n}\r\n\r\n// error handlers\r\n\r\nconst handleError = (error: string, dispatch: Dispatch<SetAppErrorActionType> ) => {\r\n  dispatch(setAppErrorAC(` message ${error}`))\r\n}\r\n// types\r\n\r\nexport type SetPhotosActionType = ReturnType<typeof setPhotosAC>;\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>;\r\n\r\ntype ActionsType = SetPhotosActionType | SetAppErrorActionType;\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType>\r\n","import Card, {CardMedia, CardPrimaryContent} from '@material/react-card';\r\nimport '@material/react-card/index.scss';\r\nimport React from \"react\";\r\nimport './card.scss';\r\nimport {PhotoType} from \"../../api/api\";\r\n\r\ntype PropsType = {\r\n  photo: PhotoType\r\n}\r\nexport const MyCard = React.memo((props: PropsType) => {\r\n  return (\r\n    <Card className='card'>\r\n      <CardPrimaryContent className='card_content'>\r\n        <CardMedia wide={true} square imageUrl={props.photo.img_src}/>\r\n        <div className='card_description'>\r\n          <div><b>Rover:</b> {props.photo.rover.name}</div>\r\n          <div><b>Camera:</b> {props.photo.camera.full_name}</div>\r\n          <div><b>Sol:</b> {props.photo.sol}</div>\r\n        </div>\r\n      </CardPrimaryContent>\r\n    </Card>\r\n  );\r\n})","import React, {FormEvent, useCallback} from 'react';\r\nimport TextField, {HelperText, Input} from '@material/react-text-field';\r\nimport '@material/react-text-field/index.scss';\r\n\r\ntype PropsType = {\r\n  value: string\r\n  onSetSol: (value: string) => void\r\n}\r\n\r\nexport const MyInput = React.memo((props: PropsType) => {\r\n\r\n  let isValid;\r\n  isValid = !isNaN(+props.value);\r\n\r\n  const onChange = useCallback((e: FormEvent<HTMLInputElement>) => {\r\n    props.onSetSol(e.currentTarget.value);\r\n  }, [props.value, props.onSetSol]);\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label='Sol'\r\n        helperText={<div><HelperText>Only numbers!</HelperText></div>}\r\n      ><Input\r\n        isValid={isValid}\r\n        value={props.value}\r\n        onChange={onChange}/>\r\n      </TextField>\r\n    </div>\r\n  );\r\n})","import React, {useCallback} from 'react';\r\nimport Button from '@material/react-button';\r\nimport '@material/react-button/index.scss';\r\n\r\ntype PropsType = {\r\n  label: string\r\n  disabled?: boolean\r\n  value: number\r\n  onSetPage: (value: number) => void\r\n}\r\n\r\nexport const MyButton = React.memo((props: PropsType) => {\r\n\r\n  const onClick = useCallback(() => {\r\n    props.onSetPage(props.value)\r\n  }, [props.value, props.onSetPage])\r\n\r\n  return (\r\n    <Button raised disabled={props.disabled} onClick={onClick}>\r\n      {props.label}\r\n    </Button>\r\n  );\r\n})","import React, {useCallback} from 'react';\r\nimport '@material/react-list/index.scss';\r\nimport '@material/react-menu-surface/index.scss';\r\nimport '@material/react-menu/index.scss';\r\nimport '@material/react-select/index.scss';\r\nimport Select, {Option} from '@material/react-select';\r\n\r\ntype PropsType = {\r\n  value: string\r\n  onSetValue: (value: string) => void\r\n  options: Array<string>\r\n}\r\n\r\nexport const MySelect = React.memo((props: PropsType) => {\r\n\r\n    const onEnhancedChange = useCallback((index: any, item: any) => {\r\n      props.onSetValue(item.getAttribute('data-value')\r\n      )}, [props.value, props.onSetValue])\r\n\r\n    return (\r\n      <div>\r\n        <Select\r\n          enhanced\r\n          label='Choose rover'\r\n          value={props.value}\r\n          onEnhancedChange={onEnhancedChange}\r\n        >\r\n          {props.options.map((option, item) => {\r\n            return <Option key={item} value={option}>{option}</Option>\r\n          })}\r\n        </Select>\r\n      </div>\r\n    );\r\n  }\r\n)","import React, {useCallback, useEffect, useState} from 'react';\nimport './App.scss';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setPhotosTC} from \"./redux/photos-reducer\";\nimport {MyCard} from \"./components/Card/Card\";\nimport {MyInput} from \"./components/Input/Input\";\nimport {MyButton} from \"./components/Button/Button\";\nimport {MySelect} from \"./components/Select/Select\";\nimport {PhotoType} from \"./api/api\";\n\nexport const App = React.memo(() => {\n\n  const photos: any = useSelector<any>(state => state.photo.photos);\n  const error = useSelector<any>(state => state?.photo.error);\n\n  const [page, setPage] = useState<number>(1);\n  const [sol, setSol] = useState<string>('1000');\n  const [rover, setRover] = useState<string>('curiosity');\n  const [camera, setCamera] = useState<string>('none');\n\n  const roverOptions = ['curiosity', 'opportunity', 'spirit'];\n  const cameraOptions = ['none', 'fhaz', 'rhaz', 'mast', 'chemcam', 'manhli', 'mardi', 'navcam', 'pancam', 'minites'];\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(photos);\n    dispatch(setPhotosTC(page, sol, rover, camera));\n  }, [dispatch, page, sol, rover, camera]);\n\n  const incrementPage = useCallback((page: number) => {\n    setPage(page + 1)\n  }, []);\n\n  const decrementPage = useCallback((page: number) => {\n    setPage(page - 1)\n  }, []);\n\n  console.log(error);\n  return (\n    <div className={'App'}>\n      <header className={'header'}>\n        <span>nasa</span>\n      </header>\n      <h2>Sort photo</h2>\n      <div className={'sort_block'}>\n        <MyInput value={sol} onSetSol={setSol}/>\n        <MySelect value={rover} onSetValue={setRover} options={roverOptions}/>\n        <MySelect value={camera} onSetValue={setCamera} options={cameraOptions}/>\n      </div>\n      <hr/>\n      <div className={'photos'}>\n        {!error? photos.length ? photos.map((p: PhotoType) => <MyCard key={p.id} photo={p}/>) : 'No photos': error}\n      </div>\n      <div className={'paginator'}>\n        <MyButton value={page} disabled={page === 1} onSetPage={decrementPage} label={'Previous page'}/>\n        <span><b>Page: </b>{page}</span>\n        <MyButton value={page} disabled={!photos.length} onSetPage={incrementPage} label={'load more ...'}/>\n      </div>\n    </div>\n  );\n})\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {photosReducer} from \"./photos-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  photo: photosReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}